{"ast":null,"code":"var _jsxFileName = \"/home/lancelot/reactProject/singulart/src/pages/index.js\";\nimport React, { useState } from 'react';\nimport Footer from '../components/Footer';\nimport HeroSection from '../components/HeroSection';\nimport InfoSection from '../components/InfoSection';\nimport { homeObjOne, homeObjTwo, homeObjThree } from '../components/InfoSection/Data';\nimport Navbar from '../components/Navbar';\nimport Services from '../components/Services';\nimport Sidebar from '../components/Sidebar';\n\nconst Home = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    let isMounted = true; // note this flag denote mount status\n\n    someAsyncOperation().then(data => {\n      if (isMounted) setState(data);\n    });\n    return () => {\n      isMounted = false;\n    }; // use effect cleanup to set flag false, if unmounted\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Sidebar, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(HeroSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoSection, Object.assign({}, homeObjOne, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(InfoSection, Object.assign({}, homeObjTwo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Services, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoSection, Object.assign({}, homeObjThree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/lancelot/reactProject/singulart/src/pages/index.js"],"names":["React","useState","Footer","HeroSection","InfoSection","homeObjOne","homeObjTwo","homeObjThree","Navbar","Services","Sidebar","Home","isOpen","setIsOpen","toggle","useEffect","isMounted","someAsyncOperation","then","data","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,YAHF,QAIO,gCAJP;AAKA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMa,MAAM,GAAG,MAAM;AACnBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIAG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIC,SAAS,GAAG,IAAhB,CADc,CACQ;;AACtBC,IAAAA,kBAAkB,GAAGC,IAArB,CAA0BC,IAAI,IAAI;AAChC,UAAIH,SAAJ,EAAeI,QAAQ,CAACD,IAAD,CAAR;AAChB,KAFD;AAGA,WAAO,MAAM;AAAEH,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAAlC,CALc,CAKsB;AACrC,GANQ,CAAT;AAQA,sBACE,uDACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEJ,MAAjB;AAAyB,IAAA,MAAM,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,WAAD,oBAAiBT,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,eAKE,oBAAC,WAAD,oBAAiBC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,eAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,WAAD,oBAAiBC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,eAQE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CA3BD;;AA6BA,eAAeI,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Footer from '../components/Footer';\nimport HeroSection from '../components/HeroSection';\nimport InfoSection from '../components/InfoSection';\nimport {\n  homeObjOne,\n  homeObjTwo,\n  homeObjThree,\n} from '../components/InfoSection/Data';\nimport Navbar from '../components/Navbar';\nimport Services from '../components/Services';\nimport Sidebar from '../components/Sidebar';\n\nconst Home = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    let isMounted = true; // note this flag denote mount status\n    someAsyncOperation().then(data => {\n      if (isMounted) setState(data);\n    })\n    return () => { isMounted = false }; // use effect cleanup to set flag false, if unmounted\n  });\n\n  return (\n    <>\n      <Sidebar isOpen={isOpen} toggle={toggle} />\n      <Navbar toggle={toggle} />\n      <HeroSection />\n      <InfoSection {...homeObjOne} />\n      <InfoSection {...homeObjTwo} />\n      <Services />\n      <InfoSection {...homeObjThree} />\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}