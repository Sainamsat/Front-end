{"ast":null,"code":"import _objectSpread from\"/home/lancelot/reactProject/singulart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/lancelot/reactProject/singulart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{projectFirestore}from'../firebase/config';var useFirestore=function useFirestore(collection){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),docs=_useState2[0],setDocs=_useState2[1];useEffect(function(){var unsub=projectFirestore.collection(collection).onSnapshot(function(snap){var documents=[];snap.forEach(function(doc){documents.push(_objectSpread(_objectSpread({},doc.data()),{},{id:doc.artistId}));});setDocs(documents);});return function(){return unsub();};},[collection]);return{docs:docs};};export default useFirestore;","map":{"version":3,"sources":["/home/lancelot/reactProject/singulart/src/hooks/useFirestore.js"],"names":["useState","useEffect","projectFirestore","useFirestore","collection","docs","setDocs","unsub","onSnapshot","snap","documents","forEach","doc","push","data","id","artistId"],"mappings":"uTAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,UAAD,CAAgB,eACXJ,QAAQ,CAAC,EAAD,CADG,wCAC5BK,IAD4B,eACtBC,OADsB,eAGnCL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,KAAK,CAAGL,gBAAgB,CAC3BE,UADW,CACAA,UADA,EAEXI,UAFW,CAEA,SAACC,IAAD,CAAU,CACpB,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACAD,IAAI,CAACE,OAAL,CAAa,SAACC,GAAD,CAAS,CACpBF,SAAS,CAACG,IAAV,gCAAoBD,GAAG,CAACE,IAAJ,EAApB,MAAgCC,EAAE,CAAEH,GAAG,CAACI,QAAxC,IACD,CAFD,EAGAV,OAAO,CAACI,SAAD,CAAP,CACD,CARW,CAAd,CAUA,MAAO,kBAAMH,CAAAA,KAAK,EAAX,EAAP,CACD,CAZQ,CAYN,CAACH,UAAD,CAZM,CAAT,CAcA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAP,CACD,CAlBD,CAoBA,cAAeF,CAAAA,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore\n      .collection(collection)\n      .onSnapshot((snap) => { \n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.artistId });\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFirestore;\n"]},"metadata":{},"sourceType":"module"}